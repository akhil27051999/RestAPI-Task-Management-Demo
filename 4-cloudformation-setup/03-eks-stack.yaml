AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Cluster for Task Management API'

Parameters:
  EnvironmentName:
    Description: Environment name prefix
    Type: String
    Default: TaskAPI
    
  KubernetesVersion:
    Description: Kubernetes version
    Type: String
    Default: '1.28'
    
  NodeInstanceType:
    Description: EC2 instance type for worker nodes
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
    
  NodeGroupDesiredSize:
    Description: Desired number of worker nodes
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 10
    
  NodeGroupMinSize:
    Description: Minimum number of worker nodes
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 10
    
  NodeGroupMaxSize:
    Description: Maximum number of worker nodes
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 20

Resources:
  # EKS Cluster Service Role
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-EKS-Cluster-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  # EKS Node Group Role
  EKSNodeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-EKS-Node-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  # EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${EnvironmentName}-EKS-Cluster
      Version: !Ref KubernetesVersion
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${EnvironmentName}-EKS-Cluster-SG
        SubnetIds:
          - Fn::Select:
            - 0
            - Fn::Split:
              - ","
              - Fn::ImportValue: !Sub ${EnvironmentName}-Private-App-Subnets
          - Fn::Select:
            - 1
            - Fn::Split:
              - ","
              - Fn::ImportValue: !Sub ${EnvironmentName}-Private-App-Subnets
          - Fn::Select:
            - 0
            - Fn::Split:
              - ","
              - Fn::ImportValue: !Sub ${EnvironmentName}-Public-Subnets
          - Fn::Select:
            - 1
            - Fn::Split:
              - ","
              - Fn::ImportValue: !Sub ${EnvironmentName}-Public-Subnets
        EndpointConfigPrivate: false
        EndpointConfigPublic: true
        PublicAccessCidrs:
          - 0.0.0.0/0
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
            - Type: authenticator
            - Type: controllerManager
            - Type: scheduler
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EKS-Cluster
        - Key: Environment
          Value: !Ref EnvironmentName

  # EKS Node Group
  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EKSCluster
    Properties:
      ClusterName: !Ref EKSCluster
      NodegroupName: !Sub ${EnvironmentName}-NodeGroup
      NodeRole: !GetAtt EKSNodeRole.Arn
      InstanceTypes:
        - !Ref NodeInstanceType
      AmiType: AL2_x86_64
      CapacityType: ON_DEMAND
      DiskSize: 30
      ScalingConfig:
        DesiredSize: !Ref NodeGroupDesiredSize
        MinSize: !Ref NodeGroupMinSize
        MaxSize: !Ref NodeGroupMaxSize
      UpdateConfig:
        MaxUnavailable: 1
      Subnets:
        - Fn::Select:
          - 0
          - Fn::Split:
            - ","
            - Fn::ImportValue: !Sub ${EnvironmentName}-Private-App-Subnets
        - Fn::Select:
          - 1
          - Fn::Split:
            - ","
            - Fn::ImportValue: !Sub ${EnvironmentName}-Private-App-Subnets
      RemoteAccess:
        Ec2SshKey: !Ref KeyPairName
        SourceSecurityGroups:
          - Fn::ImportValue: !Sub ${EnvironmentName}-Management-SG
      Tags:
        Environment: !Ref EnvironmentName
        NodeGroup: !Sub ${EnvironmentName}-NodeGroup

  # OIDC Identity Provider
  EKSClusterOIDCProvider:
    Type: AWS::IAM::OIDCIdentityProvider
    Properties:
      Url: !GetAtt EKSCluster.OpenIdConnectIssuerUrl
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280

Outputs:
  EKSClusterName:
    Description: EKS Cluster Name
    Value: !Ref EKSCluster
    Export:
      Name: !Sub ${EnvironmentName}-EKS-Cluster-Name

  EKSClusterArn:
    Description: EKS Cluster ARN
    Value: !GetAtt EKSCluster.Arn
    Export:
      Name: !Sub ${EnvironmentName}-EKS-Cluster-ARN

  EKSClusterEndpoint:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EKSCluster.Endpoint
    Export:
      Name: !Sub ${EnvironmentName}-EKS-Cluster-Endpoint

  EKSNodeGroupName:
    Description: EKS Node Group Name
    Value: !Ref EKSNodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-EKS-NodeGroup-Name

  EKSClusterOIDCIssuerURL:
    Description: EKS Cluster OIDC Issuer URL
    Value: !GetAtt EKSCluster.OpenIdConnectIssuerUrl
    Export:
      Name: !Sub ${EnvironmentName}-EKS-OIDC-Issuer-URL
