pipeline {
    agent any
    
    environment {
        DOCKER_REGISTRY = 'your-registry'
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')
        KUBECONFIG_CREDENTIALS = credentials('kubeconfig')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Test Backend') {
            steps {
                dir('2-source-code') {
                    sh 'mvn clean test'
                }
            }
        }
        
        stage('Build Images') {
            parallel {
                stage('Build Backend') {
                    steps {
                        dir('2-source-code') {
                            script {
                                def backendImage = docker.build("${DOCKER_REGISTRY}/task-management-api:${BUILD_NUMBER}")
                                docker.withRegistry('https://registry-1.docker.io/v2/', 'docker-hub-credentials') {
                                    backendImage.push()
                                    backendImage.push("latest")
                                }
                            }
                        }
                    }
                }
                
                stage('Build Frontend') {
                    steps {
                        dir('3-frontend') {
                            script {
                                def frontendImage = docker.build("${DOCKER_REGISTRY}/task-management-frontend:${BUILD_NUMBER}")
                                docker.withRegistry('https://registry-1.docker.io/v2/', 'docker-hub-credentials') {
                                    frontendImage.push()
                                    frontendImage.push("latest")
                                }
                            }
                        }
                    }
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            when {
                branch 'main'
            }
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh '''
                        # Update image tags
                        sed -i "s|task-management-api:latest|${DOCKER_REGISTRY}/task-management-api:${BUILD_NUMBER}|g" 7-kubernetes/task-api-deployment.yaml
                        sed -i "s|task-management-frontend:latest|${DOCKER_REGISTRY}/task-management-frontend:${BUILD_NUMBER}|g" 7-kubernetes/frontend-deployment.yaml
                        
                        # Deploy to Kubernetes
                        kubectl apply -f 7-kubernetes/
                    '''
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
